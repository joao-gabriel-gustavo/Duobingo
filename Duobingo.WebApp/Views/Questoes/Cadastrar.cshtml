@using Duobingo.WebApp.Model
@model CadastrarQuestaoViewModel

@{
    Layout = "_Layout";
    ViewBag.Titulo = "Cadastrar Questão";
}

<div class="row justify-content-center">
    <div class="col-lg-8 col-xl-7">
        <form asp-action="Cadastrar" method="post" id="formQuestao">
            <div class="card shadow">
                <div class="card-header bg-success text-white">
                    <h5 class="mb-0">
                        <i class="bi bi-plus-circle"></i>
                        Cadastrar Nova Questão
                    </h5>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label asp-for="SelectedMateriaId" class="form-label">Matéria *</label>
                        <select asp-for="SelectedMateriaId" class="form-select">
                            <option value="">Selecione uma matéria</option>
                            @foreach (var materia in Model.MateriasDisponiveis)
                            {
                                <option value="@materia.Id">@materia.Nome</option>
                            }
                        </select>
                        <span asp-validation-for="SelectedMateriaId" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Enunciado" class="form-label">Enunciado da Questão *</label>
                        <textarea asp-for="Enunciado" class="form-control" rows="4" placeholder="Digite o enunciado da questão..."></textarea>
                        <span asp-validation-for="Enunciado" class="text-danger"></span>
                    </div>

                    <div class="mb-4">
                        <label class="form-label mb-0">Alternativas *</label>
                        <div class="form-text text-muted mt-0 mb-2">
                            Marque o círculo à esquerda para indicar a alternativa correta. Mínimo: 2 alternativas, Máximo: 4 alternativas.
                        </div>
                        
                        <div id="alternativas-container">
                            @for (int i = 0; i < Model.Alternativas.Count; i++)
                            {
                                <div class="alternativa-item mb-2" data-index="@i">
                                    <div class="input-group mb-3">
                                        <div class="input-group-text">
                                            <input type="radio" name="AlternativaCorreta" value="@i" @(Model.Alternativas[i].Correta ? "checked" : "") class="form-check-input mt-0" title="Marcar como resposta correta">
                                        </div>
                                        <input asp-for="@Model.Alternativas[i].Letra" class="form-control form-control-sm letra-input" placeholder="A" style="max-width: 60px;" readonly />
                                        <input asp-for="@Model.Alternativas[i].Resposta" class="form-control" placeholder="Digite a alternativa..." />
                                        <input asp-for="@Model.Alternativas[i].Correta" type="hidden" />
                                        <button type="button" class="btn btn-outline-danger btn-sm" onclick="removerAlternativa(this)" title="Remover alternativa">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </div>
                                </div>
                            }
                        </div>
                        
                        <button type="button" id="btnAdicionarAlternativa" class="btn btn-outline-primary btn-sm mt-2">
                            <i class="bi bi-plus"></i> Adicionar Alternativa
                        </button>
                        <span asp-validation-for="Alternativas" class="text-danger"></span>
                    </div>
                </div>
                
                <div class="card-footer bg-light">
                    <div class="d-flex gap-2 justify-content-end">
                        <a href="/questoes" class="btn btn-secondary">
                            <i class="bi bi-arrow-left"></i> Cancelar
                        </a>
                        <button type="submit" class="btn btn-success px-4">
                            <i class="bi bi-check-lg"></i> Cadastrar
                        </button>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        let alternativaIndex = @Model.Alternativas.Count;
        
        function gerarLetra(index) {
            return String.fromCharCode(65 + index); // A=65, B=66, C=67, D=68
        }
        
        function atualizarLetras() {
            const alternativas = document.querySelectorAll('.alternativa-item');
            alternativas.forEach((item, index) => {
                const letraInput = item.querySelector('.letra-input');
                letraInput.value = gerarLetra(index);
            });
        }
        
        function attachRadioListeners() {
            document.querySelectorAll('input[name="AlternativaCorreta"]').forEach(radio => {
                radio.addEventListener('change', function() {
                    if (this.checked) {
                        // Marcar a alternativa selecionada como correta
                        const index = this.value;
                        const corretaInput = document.querySelector(`input[name="Alternativas[${index}].Correta"]`);
                        if (corretaInput) {
                            corretaInput.value = 'true';
                        }
                        
                        // Desmarcar as outras alternativas
                        document.querySelectorAll('input[name*=".Correta"]').forEach((input, idx) => {
                            if (idx != index) {
                                input.value = 'false';
                            }
                        });
                    }
                });
            });
        }
        
        document.getElementById('btnAdicionarAlternativa').addEventListener('click', function() {
            if (document.querySelectorAll('.alternativa-item').length >= 4) {
                alert('Máximo de 4 alternativas permitidas.');
                return;
            }
            
            const container = document.getElementById('alternativas-container');
            const currentCount = document.querySelectorAll('.alternativa-item').length;
            const newLetter = gerarLetra(currentCount);
            
            const alternativaHtml = `
                <div class="alternativa-item mb-2" data-index="${currentCount}">
                    <div class="input-group mb-3">
                        <div class="input-group-text">
                            <input type="radio" name="AlternativaCorreta" value="${currentCount}" class="form-check-input mt-0" title="Marcar como resposta correta">
                        </div>
                        <input name="Alternativas[${currentCount}].Letra" class="form-control form-control-sm letra-input" value="${newLetter}" style="max-width: 60px;" readonly />
                        <input name="Alternativas[${currentCount}].Resposta" class="form-control" placeholder="Digite a alternativa..." />
                        <input name="Alternativas[${currentCount}].Correta" type="hidden" value="false" />
                        <button type="button" class="btn btn-outline-danger btn-sm" onclick="removerAlternativa(this)" title="Remover alternativa">
                            <i class="bi bi-trash"></i>
                        </button>
                    </div>
                </div>
            `;
            
            container.insertAdjacentHTML('beforeend', alternativaHtml);
            attachRadioListeners();
        });
        
        function removerAlternativa(button) {
            const alternativasCount = document.querySelectorAll('.alternativa-item').length;
            if (alternativasCount <= 2) {
                alert('Mínimo de 2 alternativas obrigatórias.');
                return;
            }
            
            button.closest('.alternativa-item').remove();
            reindexarAlternativas();
        }
        
        function reindexarAlternativas() {
            const alternativas = document.querySelectorAll('.alternativa-item');
            alternativas.forEach((item, index) => {
                item.setAttribute('data-index', index);
                
                const letraInput = item.querySelector('input[name*=".Letra"]');
                const respostaInput = item.querySelector('input[name*=".Resposta"]');
                const corretaInput = item.querySelector('input[name*=".Correta"]');
                const radioButton = item.querySelector('input[type="radio"]');
                
                // Atualizar nomes dos inputs
                letraInput.name = `Alternativas[${index}].Letra`;
                respostaInput.name = `Alternativas[${index}].Resposta`;
                corretaInput.name = `Alternativas[${index}].Correta`;
                radioButton.value = index;
                
                // Atualizar letra
                letraInput.value = gerarLetra(index);
            });
            
            // Reattach event listeners after reindexing
            attachRadioListeners();
        }
        
        // Validação antes do submit
        document.getElementById('formQuestao').addEventListener('submit', function(e) {
            const alternativasComResposta = Array.from(document.querySelectorAll('input[name*=".Resposta"]'))
                .filter(input => input.value.trim() !== '');

            if (alternativasComResposta.length < 2) {
                alert('Uma questão deve ter pelo menos 2 alternativas preenchidas.');
                e.preventDefault();
                return false;
            }

            // Verificar se pelo menos uma alternativa está marcada como correta
            const radioButtons = document.querySelectorAll('input[name="AlternativaCorreta"]:checked');
            if (radioButtons.length === 0) {
                alert('Marque pelo menos uma alternativa como correta.');
                e.preventDefault();
                return false;
            }

            // Verificar se a alternativa marcada como correta tem resposta
            const indexCorreto = radioButtons[0].value;
            const respostaCorreta = document.querySelector(`input[name="Alternativas[${indexCorreto}].Resposta"]`).value.trim();
            if (respostaCorreta === '') {
                alert('A alternativa marcada como correta deve ter resposta preenchida.');
                e.preventDefault();
                return false;
            }
        });
        
        // Inicializar na página carregada
        document.addEventListener('DOMContentLoaded', function() {
            atualizarLetras();
            attachRadioListeners();
        });
    </script>
} 
